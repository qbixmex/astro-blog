---
import BaseLayout from '../../layouts/BaseLayout.astro';
import BlogPost from '../../components/BlogPost.astro';
import { type Post } from '../../interfaces/Post';

type ResponseStaticPaths = {
  params: { tag: string };
  props: { posts: Post[] };
}[];

export async function getStaticPaths(): Promise<ResponseStaticPaths> {
  const allPosts = await Astro.glob('../posts/*.md') as Post[];
  const tagsArray = allPosts.map((post) => post.frontmatter.tags).flat();
  const uniqueTags = [ ...new Set(tagsArray) ];

  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) => {
      return post.frontmatter.tags.includes(tag);
    });

    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

const { tag } = Astro.params;
const { posts } = Astro.props;
const filteredPosts = posts.filter(
  (post) => post.frontmatter.tags?.includes(tag)
);
---
<BaseLayout pageTitle={tag}>
  <p>Entradas etiquetadas con {tag}:</p>
  <ul>
    {filteredPosts.map((post) => (
      <BlogPost
        url={post.url}
        title={post.frontmatter.title}
      />
    ))}
  </ul>
</BaseLayout>